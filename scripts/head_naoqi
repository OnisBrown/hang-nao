#!/usr/bin/env python2.7

import sys
import naoqi
from naoqi import ALProxy
import time
import almath
import rospy
import roslib
from trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint

rospy.init_node('mover', anonymous=True)
ph = rospy.Publisher('/nao_dcm/Head_controller/command', JointTrajectory, queue_size = 10)
r = rospy.Rate(10)


def pub(p, jt):
	p.publish(jt)
	print jt


def head_move(jt, jtp, goal):
	jt.joint_names = ['HeadPitch','HeadYaw']
	jtp.positions = goal
	jtp.time_from_start = rospy.Duration(0.5)
	jt.points.append(jtp)
	pub(ph, jt)


def move_setup():
	jt = JointTrajectory()
	jtp = JointTrajectoryPoint()
	jtp.positions = [0,0]
	jtp.velocities = []
	jtp.accelerations = []
	jtp.effort = []
	return jt, jtp


def head_shake(sad):
	joint_reset = move_setup()
	if sad:
		goal = [0.4, 0.5]
		head_move(joint_reset[0], joint_reset[1], goal)
	else:
		goal = [0.0, 1.0]
		head_move(joint_reset[0], joint_reset[1], goal)
	print "one shake"


def myHook():
	print "shutting down"


rospy.on_shutdown(myHook)

while not rospy.is_shutdown():
	try:
		head_shake(True)

	except KeyboardInterrupt:
		sys.exit()