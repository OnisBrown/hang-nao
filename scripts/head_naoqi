#!/usr/bin/env python2.7

import sys
import naoqi
from naoqi import ALProxy
import time
import almath
import rospy
import roslib
from trajectory_msgs.msg import JointTrajectory, JointTrajectoryPoint
rospy.init_node('mover', anonymous=True)
ph = rospy.Publisher('/nao_dcm/Head_controller/command', JointTrajectory, queue_size = 10)
r = rospy.Rate(10)


def pub(p, jt):
	p.publish(jt)
	print jt


	
def head_shake(jt, jtp):
	jt.joint_names = ['HeadPitch','HeadYaw']
	jtp.positions = [-0.7,1.6]
	jtp.time_from_start = rospy.Duration(rospy.get_time())
	jt.points.append(jtp)
	pub(ph, jt)
	jtp.positions = [-0.7,0.0]
	jtp.time_from_start = rospy.Duration(rospy.get_time())
	jt.points.append(jtp)
	pub(ph, jt)
	jtp.positions = [-0.7,-1.6]
	jtp.time_from_start = rospy.Duration(rospy.get_time())
	jt.points.append(jtp)
	pub(ph, jt)
	print "one shake"

def move_setup():
	jt = JointTrajectory()
	jtp = JointTrajectoryPoint()
	jtp.positions = [0,0]
	jtp.velocities = []
	jtp.accelerations = []
	jtp.effort = []
	return (jt, jtp)
	
def myhook():
  print "shutting down"

rospy.on_shutdown(myhook)

while not rospy.is_shutdown():
		
		try:	
			joint_reset
			head_shake()
		
		except KeyboardInterrupt:
			sys.exit()

		
		
	
